import sys
print(sys.executable)
import os
import gc
import numpy as np
import pandas as pd
import arviz as az
import matplotlib.pyplot as plt
import seaborn as sns
import cmdstanpy
from cmdstanpy import CmdStanModel
from matplotlib import style
style.use('../../../PlottingStyle.mplstyle')
import os
import gc
import numpy as np
import pandas as pd
import arviz as az
import matplotlib.pyplot as plt
import seaborn as sns
import cmdstanpy
from cmdstanpy import CmdStanModel
from matplotlib import style
style.use('../../../PlottingStyle.mplstyle')
def StanModel(stan_file: str, stan_code: str) -> CmdStanModel:
"""Load or compile a Stan model"""
stan_src = f"{stan_file}.stan"
if not os.path.isfile(stan_file):
open(stan_src, 'w').write(stan_code)  # Write Stan code if needed
return CmdStanModel(stan_file=stan_src, cpp_options={'STAN_THREADS': 'true', 'parallel_chains': 4})
return CmdStanModel(stan_file=stan_src, exe_file=stan_file)
def bw_nrd0(x):
if len(x) < 2:
raise(Exception("need at least 2 data points"))
hi = np.std(x, ddof=1)
q75, q25 = np.percentile(x, [75 ,25])
iqr = q75 - q25
lo = min(hi, iqr/1.34)
lo = lo or hi or abs(x[0]) or 1
return 0.9 * lo *len(x)**-0.2
install.packages("quarto")
reticulate::repl_python()
